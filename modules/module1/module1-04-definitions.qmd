---
format: live-html
---

<script src='../../src/quiz.js'></script>

# 2.1. Exercises

## Definitions

<div id='mcq1'></div>
<script>
    generateQuiz(
        'mcq1',
        'Question 1',
        'What is Pandas?',
        {
        'A useful tool for data manipulation in Python': 'Nice work! Pandas is a tool we use in conjunction with Python.',
        'A programming language': 'Are you sure you know the difference between Python and Pandas?',
        'A datatype': 'Not quite. You may want to review the module slides.',
        },
        'A useful tool for data manipulation in Python',
    );
</script>

<div id='mcq2'></div>
<script>
    generateQuiz(
        'mcq2',
        'Question 2',
        'Which of the following statements is true?',
        {
        'Attribute and methods can be thought of as nouns and functions as verbs': 'Functions can be compared to verbs but you may want to revisit methods.',
        'Attribute can be thought of as nouns and functions and methods as verbs': 'You got it!',
        'Functions and methods can be thought of as nouns and attributes as verbs': 'It may be a good idea to look over this section.',
        },
        'Attribute can be thought of as nouns and functions and methods as verbs',
    );
</script>


## Coding Questions

**Instructions:**    
Running a coding exercise for the first time, could take a bit of time for everything to load. Be patient, it could take a few minutes. 

**When you see `____` in a coding exercise, replace it with what you assume to be the correct code. Run it and see if you obtain the desired output. Submit your code to validate if you were correct.**


### Your First Code!

Let's try importing pandas and loading in our data.

**Tasks:**

- Import `pandas` as `pd`.
- Load in data named `canucks.csv`.
- Save the dataframe as `hockey_players`.
- Display the first 5 rows of the dataframe.


```{pyodide}
#| exercise: your_first_code
# Import pandas 
____ as pd

# Read in the data
____ = pd.____('data/____')

# Display the dataframe
____
```

```{pyodide}
#| exercise: your_first_code
#| check: true
import pandas as pd
from src.utils import print_correct_msg

solution = pd.read_csv('data/canucks.csv').head()
assert isinstance(result, pd.DataFrame), "You should have a dataframe."
assert solution.shape == result.shape, "Are you calling head() on the right dataset?"
assert list(solution.columns) == list(result.columns), "Your column names do not seem correct."
print_correct_msg()
```

:::: { .hint exercise="your_first_code" }
::: { .callout-note collapse="false" }

## Hint 1

- Are you sure you are saving your dataframe as `hockey_players`?
- Are you using `pd.read_csv()`?

:::
::::

:::: { .solution exercise="your_first_code" }
::: { .callout-tip collapse="false" }

## Fully worked solution:

```{pyodide}
# Import pandas 
import pandas as pd

# Read in the data
hockey_players = pd.read_csv('data/canucks.csv')

# Display the dataframe
hockey_players.head()
```

:::
::::

<br>

### Your Second Code!

```{pyodide}
import pandas as pd

# Read in the data
hockey_players = pd.read_csv('data/canucks.csv')
hockey_players
```

What are the column names of the hockey_players dataframe?

**Tasks:**

- Find the column names of `hockey_players` and save it as `columns_hockey`.
- Display it.

```{pyodide}
#| setup: true
#| exercise: [your_second_code_a, your_second_code_b]
import pandas as pd
from src.utils import print_correct_msg

hockey_players = pd.read_csv('data/canucks.csv')
```

```{pyodide}
#| exercise: your_second_code_a
# Find the column names of hockey_players
# Save it as columns_hockey
____

# Display it by writing the object name
____
```

```{pyodide}
#| exercise: your_second_code_a
#| check: true
assert isinstance(result, type(hockey_players.columns)), "Are you calling .columns?"
assert list(hockey_players.columns) == list(result), "Your column names do not seem correct."
print_correct_msg()
```

:::: { .hint exercise="your_second_code_a" }
::: { .callout-note collapse="false" }

## Hint 1

- Are you sure you are saving your objects as `columns_hockey`?
- Are you using `.columns`?

:::
::::

:::: { .solution exercise="your_second_code_a" }
::: { .callout-tip collapse="false" }

## Fully worked solution:

```{pyodide}
# Find the column names of hockey_players 
# Save it as columns_hockey
columns_hockey = hockey_players.columns

# Display it by writing the object name
columns_hockey
```

:::
::::

<br>

What is the shape of the hockey dataframe?

**Tasks:**

- Find the shape of `hockey_players` and save the result as `hockey_shape`.
- Display it.

```{pyodide}
#| exercise: your_second_code_b
# Find the the data frame shape of hockey_players
# Save it as  as hockey_shape
____

# Display it by writing the object name
____
```

```{pyodide}
#| exercise: your_second_code_b
#| check: true
assert isinstance(result, tuple), "Are you using .shape?"
assert hockey_players.shape == result, "You may not have the correct dataset."
print_correct_msg()
```

:::: { .hint exercise="your_second_code_b" }
::: { .callout-note collapse="false" }

## Hint 1

- Are you sure you are saving your objects as `hockey_shape`?
- Are you using `.shape`?

:::
::::

:::: { .solution exercise="your_second_code_b" }
::: { .callout-tip collapse="false" }

## Fully worked solution:

```{pyodide}
# Find the the data frame shape of hockey_players 
# Save it as  as hockey_shape
hockey_shape = hockey_players.shape

# Display it by writing the object name
hockey_shape
```

:::
::::
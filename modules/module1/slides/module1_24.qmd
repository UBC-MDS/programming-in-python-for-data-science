---
format: revealjs
title: Sorting Dataframes
title-slide-attributes:
  data-notes: |
---

```{python}
#  | echo: false
%run src/utils.py
```

## Sorting

```{python}
# | include: false
cereal = pd.read_csv('data/cereal.csv')
cereal = cereal[["name", "mfr", "calories", "shelf", "weight", "cups", "rating"]]
```

```{python}
cereal.sort_values(by='rating')
```



:::{.notes}
When we read in our data, it is generally ordered in the same way it is stored. 

We can easily sort the rows of a dataframe based on the values within a column.

The verb that we use for that is `.sort_values()`.

For example, if we wanted to order the cereals based on rating, we could do so by using the argument `by` within the `.sort_values()` verb. 

This allows us to see the cereals with lower ratings on the top.
:::

---

```{python}
sorted_ratings = cereal.sort_values(by='rating', ascending=False)
sorted_ratings
```


:::{.notes} 
What if we wanted the cereals with higher ratings at the top?  

Then we would order them in `descending` order by setting the argument `ascending=False`.

Perfect, now we have the highest rated cereals at the top of the dataframe.  
:::


# Letâ€™s apply what we learned!
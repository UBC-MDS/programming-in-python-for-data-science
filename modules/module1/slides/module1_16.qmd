---
format: revealjs
title: Obtaining Dataframe Values
title-slide-attributes:
  data-notes: |
---

```{python}
#  | echo: false
%run src/utils.py
```


```{python}
# | include: false
cereal = pd.read_csv('data/cereal.csv')
```

```{python}
cereal.loc[[63]]
```

<br>

```{python}
cereal.loc[63, 'calories']
```


:::{.notes} 
At this point of the module, we now know how to get a subset of an existing dataframe, but what if we just want to get a single value from it?

For example, what if we wanted to save the calorie content of `Shredded Wheat` by extracting it from the dataframe manually instead of typing the number in Python?

To do this we use again our `.loc` notation and we specify the row we are targeting which is 63, followed by the column, here `calories`. This goes in the square brackets.

When we do this, it displays the the value contained in the cell, which in this case, is 80.
:::

---


```{python}
cereal.loc[[66]]
```

<br>

```{python}
cereal.loc[66, 'rating']
```


:::{.notes}
What about if we want the rating of `Smacks` which is located at index 66?

Again we use `.loc[]` notation, and we specify the row and the column location separated by a comma.

So here we write `cereal.loc` and the inside the brackets we write `[66, 'rating']`. 
:::


# Letâ€™s apply what we learned!

---
format: live-html
---

<script src='../../src/quiz.js'></script>

# 10.1. Exercises

## Fruit Bowl Statistics

Bringing back our `fruit_salad` dataframe

```out
           name    colour    location    seed   shape  sweetness   water-content  weight
0         apple       red     canada    True   round     True          84         100
1        banana    yellow     mexico   False    long     True          75         120
2    cantaloupe    orange      spain    True   round     True          90        1360
3  dragon-fruit   magenta      china    True   round    False          96         600
4    elderberry    purple    austria   False   round     True          80           5
5           fig    purple     turkey   False    oval    False          78          40
6         guava     green     mexico    True    oval     True          83         450
7   huckleberry      blue     canada    True   round     True          73           5
8          kiwi     brown      china    True   round     True          80          76
9         lemon    yellow     mexico   False    oval    False          83          65
```

<div id='mcq1'></div>
<script>
    generateQuiz(
        'mcq1',
        'Question 1',
        'Which of the following columns contain numerical data?',
        {
        '<code>colour</code>, <code>shape</code>, <code>water-content</code>': 'Maybe it would be a good idea to take a look at the slides again.',
        '<code>colour</code>, <code>seed</code>, <code>water-content</code>, <code>weight</code>': 'Some of the columns may be in here though!',
        '<code>water-content</code>, <code>weight</code>': 'This looks great! Well done!',
        'All of the columns are categorical': 'Maybe it would be a good idea to take a look at the slides again.',
        },
        '<code>water-content</code>, <code>weight</code>',
    );
</script>

<div id='mcq2'></div>
<script>
    generateQuiz(
        'mcq2',
        'Question 2',
        'We need summary statistics of both numerical and categorical columns of the dataframe <code>fruit_salad</code>. What code would be suitable for this?',
        {
        '<code>df.describe()</code>': 'Is our dataframe named <code>df</code>? Will this get summary statistics for all the columns?',
        '<code>fruit_salad.describe()</code>': 'We want statistics of both quantitative and categorical columns.',
        '<code>fruit_salad.describe(include="all")</code>': 'This looks great! Well done!',
        '<code>fruit_salad.summary(include="all")</code>': 'Is <code>summary</code> the correct command here?',
        },
        '<code>fruit_salad.describe(include="all")</code>',
    );
</script>

## Using df.describe()

**Instructions:**    
Running a coding exercise for the first time, could take a bit of time for everything to load. Be patient, it could take a few minutes. 

**When you see `____` in a coding exercise, replace it with what you assume to be the correct code. Run it and see if you obtain the desired output. Submit your code to validate if you were correct.**

```{pyodide}
import pandas as pd

# The data
hockey_players = pd.read_csv('data/canucks.csv')
hockey_players
```

Try to obtain some statistics from the hockey data.

**Tasks:**

- Find the statistics of both categorical and quantitative columns. Save the dataframe in an object called `hockey_stats`.
- Display it.

```{pyodide}
#| setup: true
#| exercise: [using_df_describe_a, using_df_describe_b]
import pandas as pd
from src.utils import print_correct_msg

hockey_players = pd.read_csv('data/canucks.csv')
```

```{pyodide}
#| exercise: using_df_describe_a
# Find the statistics of both categorical and quantitive columns
# Save the dataframe in an object called hockey_stats
____ = ____.____(____)

# Display it
____
```

```{pyodide}
#| exercise: using_df_describe_a
#| check: true
solution = hockey_players.describe(include = 'all')
assert isinstance(result, type(solution)), "The result should be a DataFrame."
assert solution.shape == result.shape, "Your dataframe has the wrong dimensions."
assert list(solution.columns) == list(result.columns), "Your columns do not seem to be correct."
assert list(solution.index) == list(result.index), "Your rows do not seem to be correct."
print_correct_msg()
```

:::: { .hint exercise="using_df_describe_a" }
::: { .callout-note collapse="false" }

## Hint 1

- Are you sure you are saving your objects correctly?
- Are you using using `.describe(include="all")` ?

:::
::::

:::: { .solution exercise="using_df_describe_a" }
::: { .callout-tip collapse="false" }

## Fully worked solution:

```{pyodide}
# Find the statistics of both categorical and quantitive columns  
# Save the dataframe in an object called hockey_stats
hockey_stats = hockey_players.describe(include = 'all')

# Display it
hockey_stats
```

:::
::::

<br>

**Tasks:**

- Find the total salary of the team and save it in an object called `player_cost`.

```{pyodide}
#| exercise: using_df_describe_b
# Find the total salary of the team 
# Save it in an object called player_cost
____ = hockey_players[[____]].____()

# Display it
____
```

```{pyodide}
#| exercise: using_df_describe_b
#| check: true
solution = hockey_players[['Salary']].sum()
assert isinstance(result, type(solution)), "Are you using .sum()?"
assert solution[0] == result[0], "Did you create player_cost properly?"
print_correct_msg()
```

:::: { .hint exercise="using_df_describe_b" }
::: { .callout-note collapse="false" }

## Hint 1

- Are you using `df[["column-name"]].sum()` to find the total of a column?

:::
::::

:::: { .solution exercise="using_df_describe_b" }
::: { .callout-tip collapse="false" }

## Fully worked solution:

```{pyodide}
# Find the total salary of the team 
# Save it in an object called player_cost
player_cost = hockey_players[['Salary']].sum()

# Display it
player_cost
```

:::
::::
---
format: live-html
---

<script src='../../src/quiz.js'></script>

# 2.1. Exercises

## Name that Argument!

<div id='mcq1'></div>
<script>
    generateQuiz(
        'mcq1',
        'Question 1',
        'Which argument will assign the index when reading in your data with <code>pd.read_excel()</code>?',
        {
        '<code>header</code>': 'This specifies where your column names are located, not your row index labels.',
        '<code>nrows</code>': 'This argument returns a selection of rows from the file.',
        '<code>index_col</code>': 'Good job!',
        },
        '<code>index_col</code>',
    );
</script>

<div id='mcq2'></div>
<script>
    generateQuiz(
        'mcq2',
        'Question 2',
        'Which argument will select only specific columns of the data file with <code>pd.read_csv()</code>?',
        {
        '<code>header</code>': 'Not quite',
        '<code>nrows</code>': 'Not quite',
        '<code>usecols</code>': 'Good job!',
        },
        '<code>usecols</code>',
    );
</script>


## Using Arguments when Reading in Files

**Instructions:**    
Running a coding exercise for the first time could take a bit of time for everything to load.  Be patient, it could take a few minutes. 

**When you see `____` in a coding exercise, replace it with what you assume to be the correct code.  Run it and see if you obtain the desired output.  Submit your code to validate if you were correct.**

Load in the data using the most suitable arguments.    

**Tasks:**

-  Read in the first 100 rows and columns `name`, `total_bs` and `type` from the file `pokemon.csv`, which is located in the data directory.
- Save the resulting dataframe as `pokemon_sample`. 
- Display `pokemon_sample`.


```{pyodide}
#| exercise: using_arguments_when_reading_in_files
import pandas as pd

# Read in the data from the csv file using the full pathway
# Save it as pokemon_sample   
# Only load in the first 100 rows and only load in columns  name, total_bs, type
____ = ____(____,
            ____,
            ____)

# Display the dataframe
____
```

```{pyodide}
#| exercise: using_arguments_when_reading_in_files
#| check: true
from src.utils import print_correct_msg

solution = pd.read_csv('data/pokemon.csv', nrows=100, usecols=['name', 'total_bs', 'type'])

assert isinstance(result, pd.DataFrame), "Your result should be a dataframe."
assert solution.shape == result.shape, "The dimensions are incorrect."
assert sorted(list(solution.columns)) == sorted(list(result.columns)), "Your columns do not seem correct."
print_correct_msg()
```

:::: { .hint exercise="using_arguments_when_reading_in_files"}
::: { .callout-note collapse="false"}

## Hint 1

- Are you sure you are saving your dataframe as `pokeman_df`?
- Are you using `pd.read_csv()`?
- Are you including the full path through the `data/` folder when calling the file name?
- Do you the argument `nrows=100`?
- Are you loading in the specified column index labels?
- Perhaps you are using `index_col=0` when it was not required?

:::
::::

:::: { .solution exercise="using_arguments_when_reading_in_files" }
::: { .callout-tip collapse="false"}

## Fully worked solution:

```{pyodide}
import pandas as pd

# Read in the data from the csv file using the full pathway
# Save it as pokemon_sample   
# Only load in the first 100 rows and only load in columns  name, total_bs, type
pokemon_sample = pd.read_csv('data/pokemon.csv',
                             nrows=100,
                             usecols=['name', 'total_bs', 'type'])

# Display the dataframe
pokemon_sample
```

:::
::::